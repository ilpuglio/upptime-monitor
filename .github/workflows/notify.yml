name: Notify

on:
  schedule:
    - cron: "*/5 * * * *"  # Esegue ogni 5 minuti
  workflow_dispatch:        # Permette di avviarlo manualmente da GitHub

jobs:
  notify:
    name: Send Telegram notifications
    runs-on: ubuntu-latest

    steps:
      - name: Check for incidents
        id: incident
        uses: upptime/uptime-monitor@v1.40.1
        with:
          github_token: ${{ secrets.GH_PAT || github.token }}

      # FACOLTATIVO: stampa debug dei valori
      - name: Debug incident outputs
        run: |
          echo "Open incident: ${{ steps.incident.outputs.hasOpenIncident }}"
          echo "Closed incident: ${{ steps.incident.outputs.hasClosedIncident }}"

      # üî¥ NOTIFICA INCIDENTE (DOWN)
      - name: Notify Telegram on incident
        if: steps.incident.outputs.hasOpenIncident == 'true'
        run: |
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d text="‚ö†Ô∏è *Attenzione!* Uno o pi√π servizi risultano *offline*. Verifica il repository Upptime per maggiori dettagli." \
            -d parse_mode=Markdown
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}

      # üü¢ NOTIFICA RECOVERY (UP)
      - name: Notify Telegram on recovery
        if: steps.incident.outputs.hasClosedIncident == 'true'
        run: |
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d text="‚úÖ *Recupero completato!* Tutti i servizi monitorati risultano nuovamente *online*." \
            -d parse_mode=Markdown
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
